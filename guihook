-- Remote Explorer (Local Only, Safe Mode)
-- Aman: tidak crash saat buka Data tab

-- ==== Services ====
local RS = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local lp = Players.LocalPlayer

-- ==== Helper fungsi aman ====
local function brief(v, depth, seen)
    depth = depth or 0
    if depth > 2 then return "<…>" end
    local t = typeof(v)
    if t == "string" then
        return #v > 100 and '"'..v:sub(1,100)..'…"' or '"'..v..'"'
    elseif t == "number" or t == "boolean" then
        return tostring(v)
    elseif t == "Instance" then
        return v:GetFullName()
    elseif t == "table" then
        seen = seen or {}
        if seen[v] then return "{<cycle>}" end
        seen[v] = true
        local out, n = {}, 0
        for k,val in pairs(v) do
            n += 1
            if n > 8 then
                table.insert(out,"…")
                break
            end
            table.insert(out,"["..brief(k,depth+1,seen).."]="..brief(val,depth+1,seen))
        end
        return "{"..table.concat(out,", ").."}"
    else
        return tostring(v)
    end
end

-- ==== GUI ====
local gui = Instance.new("ScreenGui")
gui.Parent = game.CoreGui
gui.Name = "RemoteExplorer_Safe"

local Main = Instance.new("Frame")
Main.Size = UDim2.new(0,400,0,280)
Main.Position = UDim2.new(0.35,0,0.3,0)
Main.BackgroundColor3 = Color3.fromRGB(25,25,25)
Main.Active, Main.Draggable = true, true
Main.Parent = gui

local Title = Instance.new("TextLabel",Main)
Title.Size = UDim2.new(1,-80,0,30)
Title.BackgroundColor3 = Color3.fromRGB(35,35,35)
Title.Text = "Remote Explorer (Safe)"
Title.TextColor3 = Color3.new(1,1,1)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left

local Min = Instance.new("TextButton",Main)
Min.Size = UDim2.new(0,40,0,30)
Min.Position = UDim2.new(1,-80,0,0)
Min.Text = "-"
Min.BackgroundColor3 = Color3.fromRGB(60,60,60)

local Close = Instance.new("TextButton",Main)
Close.Size = UDim2.new(0,40,0,30)
Close.Position = UDim2.new(1,-40,0,0)
Close.Text = "X"
Close.BackgroundColor3 = Color3.fromRGB(100,50,50)

local TabBar = Instance.new("Frame",Main)
TabBar.Size = UDim2.new(1,0,0,25)
TabBar.Position = UDim2.new(0,0,0,30)
TabBar.BackgroundColor3 = Color3.fromRGB(30,30,30)

local Content = Instance.new("Frame",Main)
Content.Size = UDim2.new(1,0,1,-55)
Content.Position = UDim2.new(0,0,0,55)
Content.BackgroundTransparency = 1

-- tab handler
local Tabs, Current = {}, nil
local function AddTab(name)
    local Btn = Instance.new("TextButton",TabBar)
    Btn.Size = UDim2.new(0,100,1,0)
    Btn.Text = name
    Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Btn.TextColor3 = Color3.new(1,1,1)
    Btn.Font = Enum.Font.Gotham
    Btn.TextSize = 12

    local Page = Instance.new("Frame",Content)
    Page.Size = UDim2.new(1,0,1,0)
    Page.BackgroundTransparency = 1
    Page.Visible = false

    Btn.MouseButton1Click:Connect(function()
        if Current then Current.Visible=false end
        Page.Visible=true
        Current=Page
    end)

    if not Current then Page.Visible=true Current=Page end
    Tabs[name]=Page
    return Page
end

-- Minimize
local minimized=false
Min.MouseButton1Click:Connect(function()
    minimized=not minimized
    TabBar.Visible=not minimized
    Content.Visible=not minimized
    Main.Size = minimized and UDim2.new(0,400,0,30) or UDim2.new(0,400,0,280)
end)
Close.MouseButton1Click:Connect(function() gui:Destroy() end)

-- ==== Rescan Tab ====
local ScanTab = AddTab("Rescan")
local Search = Instance.new("TextBox",ScanTab)
Search.Size = UDim2.new(1,-10,0,25)
Search.Position = UDim2.new(0,5,0,5)
Search.PlaceholderText="Search Remote"
Search.BackgroundColor3=Color3.fromRGB(40,40,40)
Search.TextColor3=Color3.new(1,1,1)
Search.ClearTextOnFocus=false

local List = Instance.new("ScrollingFrame",ScanTab)
List.Size = UDim2.new(1,-10,1,-40)
List.Position = UDim2.new(0,5,0,35)
List.BackgroundTransparency=1
List.ScrollBarThickness=6
local UIList=Instance.new("UIListLayout",List)
UIList.Padding=UDim.new(0,5)

local Remotes={}
local function rebuild()
    table.clear(Remotes)
    for _,d in ipairs(RS:GetDescendants()) do
        if d:IsA("RemoteEvent") or d:IsA("RemoteFunction") then
            table.insert(Remotes,d)
        end
    end
end
local function render()
    List:ClearAllChildren() UIList.Parent=List
    for _,r in ipairs(Remotes) do
        if Search.Text=="" or r.Name:lower():find(Search.Text:lower()) then
            local b=Instance.new("TextButton",List)
            b.Size=UDim2.new(1,-10,0,25)
            b.BackgroundColor3=Color3.fromRGB(50,50,50)
            b.Text=r:GetFullName()
            b.TextColor3=Color3.new(1,1,1)
            b.TextXAlignment=Enum.TextXAlignment.Left
            b.Font=Enum.Font.Gotham
            b.TextSize=12
        end
    end
    List.CanvasSize=UDim2.new(0,0,0,UIList.AbsoluteContentSize.Y+5)
end
rebuild() render()
RS.DescendantAdded:Connect(function(o) if o:IsA("RemoteEvent")or o:IsA("RemoteFunction")then rebuild() render() end end)
RS.DescendantRemoving:Connect(function(o) if o:IsA("RemoteEvent")or o:IsA("RemoteFunction")then rebuild() render() end end)
Search:GetPropertyChangedSignal("Text"):Connect(render)

-- ==== Data Tab ====
local DataTab = AddTab("Data")
local Bar = Instance.new("Frame",DataTab)
Bar.Size=UDim2.new(1,-10,0,25)
Bar.Position=UDim2.new(0,5,0,5)
Bar.BackgroundColor3=Color3.fromRGB(35,35,35)

local Back=Instance.new("TextButton",Bar)
Back.Size=UDim2.new(0,60,1,0) Back.Text="<Back"
Back.BackgroundColor3=Color3.fromRGB(70,70,100)
Back.TextColor3=Color3.new(1,1,1)

local Copy=Instance.new("TextButton",Bar)
Copy.Size=UDim2.new(0,60,1,0) Copy.Position=UDim2.new(0,65,0,0)
Copy.Text="Copy" Copy.BackgroundColor3=Color3.fromRGB(70,70,70) Copy.TextColor3=Color3.new(1,1,1)

local Clear=Instance.new("TextButton",Bar)
Clear.Size=UDim2.new(0,60,1,0) Clear.Position=UDim2.new(0,130,0,0)
Clear.Text="Clear" Clear.BackgroundColor3=Color3.fromRGB(100,60,60) Clear.TextColor3=Color3.new(1,1,1)

local LogFrame=Instance.new("ScrollingFrame",DataTab)
LogFrame.Size=UDim2.new(1,-10,1,-40)
LogFrame.Position=UDim2.new(0,5,0,35)
LogFrame.BackgroundTransparency=1
LogFrame.ScrollBarThickness=6
local LLayout=Instance.new("UIListLayout",LogFrame)
LLayout.Padding=UDim.new(0,5)

local Logs={}
local function addLog(t)
    local l=Instance.new("TextLabel",LogFrame)
    l.BackgroundTransparency=1
    l.Size=UDim2.new(1,-10,0,0)
    l.AutomaticSize=Enum.AutomaticSize.Y
    l.Font=Enum.Font.Code
    l.TextSize=12
    l.TextColor3=Color3.new(1,1,1)
    l.TextXAlignment=Enum.TextXAlignment.Left
    l.TextWrapped=true
    l.Text=t
    Logs[#Logs+1]=t
    task.defer(function()
        LogFrame.CanvasSize=UDim2.new(0,0,0,LLayout.AbsoluteContentSize.Y+10)
        LogFrame.CanvasPosition=Vector2.new(0,math.max(0,LogFrame.CanvasSize.Y.Offset-LogFrame.AbsoluteWindowSize.Y+4))
    end)
end

Back.MouseButton1Click:Connect(function() Tabs["Data"].Visible=false Tabs["Rescan"].Visible=true end)
Copy.MouseButton1Click:Connect(function() if setclipboard then setclipboard(table.concat(Logs,"\n")) end end)
Clear.MouseButton1Click:Connect(function() Logs={} for _,c in ipairs(LogFrame:GetChildren())do if c:IsA("TextLabel")then c:Destroy()end end LogFrame.CanvasSize=UDim2.new() end)

-- ==== Hook Outbound (Safe) ====
local ok,mt=pcall(getrawmetatable,game)
if ok and mt then
    local old=mt.__namecall
    local ok2=pcall(function() setreadonly(mt,false) end)
    if ok2 then
        mt.__namecall=newcclosure(function(self,...)
            local m=getnamecallmethod()
            if m=="FireServer" and self:IsA("RemoteEvent") then
                local args={...}
                addLog("[RemoteEvent] "..self:GetFullName().." :FireServer")
                for i,a in ipairs(args)do addLog(" ["..i.."] "..brief(a)) end
            elseif m=="InvokeServer" and self:IsA("RemoteFunction") then
                local args={...}
                addLog("[RemoteFunction] "..self:GetFullName().." :InvokeServer")
                for i,a in ipairs(args)do addLog(" ["..i.."] "..brief(a)) end
            end
            return old(self,...)
        end)
        setreadonly(mt,true)
    else
        addLog("[Info] Tidak bisa hook (__namecall readonly)")
    end
else
    addLog("[Info] Tidak support getrawmetatable")
end
