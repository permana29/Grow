-- ðŸ“Œ Remote Explorer (Final Stable + Realtime Sniffer)
-- GUI persis versi kamu + log realtime di tab Data

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RS = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- ====== Decode helpers (bukan JSON, format manusiawi) ======
local function decodeValue(v, depth)
	depth = depth or 0
	if depth > 3 then return "<Max Depth>" end

	local t = typeof(v)
	if t == "string" then
		return '"'..v..'"'
	elseif t == "number" or t == "boolean" then
		return tostring(v)
	elseif t == "Instance" then
		local ok, path = pcall(function() return v:GetFullName() end)
		return ok and ("<Instance: "..path..">") or "<Instance>"
	elseif t == "table" then
		local parts, cnt = {}, 0
		for k,val in pairs(v) do
			cnt += 1
			table.insert(parts, "["..tostring(k).."] = "..decodeValue(val, depth+1))
			if cnt >= 12 then
				table.insert(parts, "... (lebih banyak)")
				break
			end
		end
		return "{ "..table.concat(parts, ", ").." }"
	else
		local ok, enc = pcall(function() return HttpService:JSONEncode(v) end)
		return ok and enc or "<Data tidak terbaca>"
	end
end

local function formatArgs(args)
	local lines = {}
	for i, a in ipairs(args) do
		table.insert(lines, ("  [%d] = %s"):format(i, decodeValue(a)))
	end
	return table.concat(lines, "\n")
end

-- ====== GUI Builder (Sesuai versi Final Stable kamu) ======
local function CreateWindow(title)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "RemoteExplorerFinal"
	ScreenGui.ResetOnSpawn = false
	ScreenGui.Parent = game.CoreGui

	local Main = Instance.new("Frame")
	Main.Size = UDim2.new(0, 500, 0, 320)
	Main.Position = UDim2.new(0.25, 0, 0.25, 0)
	Main.BackgroundColor3 = Color3.fromRGB(25,25,25)
	Main.BorderSizePixel = 0
	Main.Active = true
	Main.Draggable = true
	Main.Parent = ScreenGui

	local Header = Instance.new("TextLabel")
	Header.Size = UDim2.new(1, -80, 0, 30)
	Header.BackgroundColor3 = Color3.fromRGB(35,35,35)
	Header.Text = title
	Header.TextColor3 = Color3.fromRGB(255,255,255)
	Header.Font = Enum.Font.GothamBold
	Header.TextSize = 14
	Header.TextXAlignment = Enum.TextXAlignment.Left
	Header.BorderSizePixel = 0
	Header.Parent = Main

	local TabBar = Instance.new("Frame")
	TabBar.Size = UDim2.new(1, 0, 0, 25)
	TabBar.Position = UDim2.new(0,0,0,30)
	TabBar.BackgroundColor3 = Color3.fromRGB(30,30,30)
	TabBar.BorderSizePixel = 0
	TabBar.Parent = Main

	local Content = Instance.new("Frame")
	Content.Size = UDim2.new(1,0,1,-55)
	Content.Position = UDim2.new(0,0,0,55)
	Content.BackgroundTransparency = 1
	Content.Parent = Main

	local Minimize = Instance.new("TextButton")
	Minimize.Size = UDim2.new(0,40,0,30)
	Minimize.Position = UDim2.new(1,-80,0,0)
	Minimize.Text = "-"
	Minimize.TextColor3 = Color3.new(1,1,1)
	Minimize.BackgroundColor3 = Color3.fromRGB(60,60,60)
	Minimize.Parent = Main

	local Close = Instance.new("TextButton")
	Close.Size = UDim2.new(0,40,0,30)
	Close.Position = UDim2.new(1,-40,0,0)
	Close.Text = "X"
	Close.TextColor3 = Color3.new(1,1,1)
	Close.BackgroundColor3 = Color3.fromRGB(100,50,50)
	Close.Parent = Main

	local Tabs = {}
	local CurrentTab

	local function AddTab(name)
		local Button = Instance.new("TextButton")
		Button.Size = UDim2.new(0,100,1,0)
		Button.BackgroundColor3 = Color3.fromRGB(50,50,50)
		Button.Text = name
		Button.TextColor3 = Color3.new(1,1,1)
		Button.Font = Enum.Font.Gotham
		Button.TextSize = 12
		Button.Parent = TabBar

		local Page = Instance.new("Frame")
		Page.Size = UDim2.new(1,0,1,0)
		Page.BackgroundTransparency = 1
		Page.Visible = false
		Page.Parent = Content

		Button.MouseButton1Click:Connect(function()
			if CurrentTab then CurrentTab.Visible = false end
			Page.Visible = true
			CurrentTab = Page
		end)

		Tabs[name] = Page
		if not CurrentTab then
			CurrentTab = Page
			Page.Visible = true
		end
		return Page
	end

	local Minimized = false
	Minimize.MouseButton1Click:Connect(function()
		Minimized = not Minimized
		if Minimized then
			Content.Visible = false
			TabBar.Visible = false
			Main.Size = UDim2.new(0,500,0,30)
		else
			Content.Visible = true
			TabBar.Visible = true
			Main.Size = UDim2.new(0,500,0,320)
		end
	end)

	Close.MouseButton1Click:Connect(function()
		ScreenGui:Destroy()
	end)

	local function SwitchTabByName(tabName)
		if CurrentTab then CurrentTab.Visible = false end
		if Tabs[tabName] then
			Tabs[tabName].Visible = true
			CurrentTab = Tabs[tabName]
		end
	end

	return AddTab, Tabs, SwitchTabByName
end

-- ====== Build GUI ======
local AddTab, Tabs, SwitchTab = CreateWindow("Remote Explorer")

-- Tab Rescan
local ScanTab = AddTab("Rescan")
local Search = Instance.new("TextBox")
Search.Size = UDim2.new(1,-10,0,25)
Search.Position = UDim2.new(0,5,0,5)
Search.PlaceholderText = "Search Remote..."
Search.BackgroundColor3 = Color3.fromRGB(40,40,40)
Search.TextColor3 = Color3.new(1,1,1)
Search.Parent = ScanTab

local RemoteList = Instance.new("ScrollingFrame")
RemoteList.Size = UDim2.new(1,-10,1,-40)
RemoteList.Position = UDim2.new(0,5,0,35)
RemoteList.BackgroundTransparency = 1
RemoteList.ScrollBarThickness = 6
RemoteList.AutomaticCanvasSize = Enum.AutomaticSize.Y
RemoteList.Parent = ScanTab

local RLLayout = Instance.new("UIListLayout", RemoteList)
RLLayout.Padding = UDim.new(0,5)
RLLayout.FillDirection = Enum.FillDirection.Vertical
RLLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Tab Data
local DataTab = AddTab("Data")

local Toolbar = Instance.new("Frame")
Toolbar.Size = UDim2.new(1,-10,0,25)
Toolbar.Position = UDim2.new(0,5,0,5)
Toolbar.BackgroundColor3 = Color3.fromRGB(35,35,35)
Toolbar.Parent = DataTab

local BackBtn = Instance.new("TextButton")
BackBtn.Size = UDim2.new(0,60,1,0)
BackBtn.Text = "Back"
BackBtn.TextColor3 = Color3.new(1,1,1)
BackBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
BackBtn.Parent = Toolbar

local CopyBtn = Instance.new("TextButton")
CopyBtn.Size = UDim2.new(0,60,1,0)
CopyBtn.Position = UDim2.new(0,65,0,0)
CopyBtn.Text = "Copy"
CopyBtn.TextColor3 = Color3.new(1,1,1)
CopyBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
CopyBtn.Parent = Toolbar

local ClearBtn = Instance.new("TextButton")
ClearBtn.Size = UDim2.new(0,60,1,0)
ClearBtn.Position = UDim2.new(0,130,0,0)
ClearBtn.Text = "Clear"
ClearBtn.TextColor3 = Color3.new(1,1,1)
ClearBtn.BackgroundColor3 = Color3.fromRGB(70,50,50)
ClearBtn.Parent = Toolbar

local DataLog = Instance.new("ScrollingFrame")
DataLog.Size = UDim2.new(1,-10,1,-40)
DataLog.Position = UDim2.new(0,5,0,35)
DataLog.BackgroundTransparency = 1
DataLog.ScrollBarThickness = 6
DataLog.AutomaticCanvasSize = Enum.AutomaticSize.Y
DataLog.Parent = DataTab

local DLLayout = Instance.new("UIListLayout", DataLog)
DLLayout.Padding = UDim.new(0,6)
DLLayout.FillDirection = Enum.FillDirection.Vertical
DLLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- ====== State ======
local Logs = {}
local CurrentRemote = nil
local CurrentConnections = {} -- { RBXScriptConnection,... } + optional hook revert
local HookRevert = nil        -- for RemoteFunction hook

-- helper: add a text block to DataLog
local function addBlock(text, color)
	local Label = Instance.new("TextLabel")
	Label.Size = UDim2.new(1,-10,0,0)
	Label.BackgroundTransparency = 1
	Label.TextXAlignment = Enum.TextXAlignment.Left
	Label.TextYAlignment = Enum.TextYAlignment.Top
	Label.TextWrapped = true
	Label.AutomaticSize = Enum.AutomaticSize.Y
	Label.Font = Enum.Font.Code
	Label.TextSize = 12
	Label.TextColor3 = color or Color3.new(1,1,1)
	Label.Text = text
	Label.Parent = DataLog
end

-- helper: disconnect all current sniffer connections
local function disconnectSniffer()
	for _,con in ipairs(CurrentConnections) do
		pcall(function() con:Disconnect() end)
	end
	CurrentConnections = {}
	if HookRevert then
		pcall(function() HookRevert() end)
		HookRevert = nil
	end
end

-- tampilkan detail dan attach sniffer ke remote yang dipilih
local function ShowRemote(remote)
	-- reset halaman Data
	DataLog:ClearAllChildren()
	table.clear(Logs)
	disconnectSniffer()
	CurrentRemote = remote

	-- Header info (non-JSON, readable)
	local lines = {
		"Name: "..remote.Name,
		"Class: "..remote.ClassName,
		"Path: "..remote:GetFullName(),
		"",
		"Properties:"
	}
	for _,prop in ipairs({"Archivable","Name","ClassName","Parent"}) do
		local ok,val = pcall(function() return tostring(remote[prop]) end)
		if ok then table.insert(lines, "  "..prop..": "..val) end
	end
	addBlock(table.concat(lines,"\n"), Color3.fromRGB(255,255,200))
	table.insert(Logs, table.concat(lines,"\n"))

	addBlock("-- Sniffer Attached --", Color3.fromRGB(180,255,180))

	-- Attach sniffer (RemoteEvent)
	if remote:IsA("RemoteEvent") then
		local con = remote.OnClientEvent:Connect(function(...)
			if CurrentRemote ~= remote then return end
			local msg = "[OnClientEvent]\n"..formatArgs({...}).."\n-----------------------"
			addBlock(msg)
			table.insert(Logs, msg)
		end)
		table.insert(CurrentConnections, con)
	end

	-- Attach sniffer (RemoteFunction) - via hook InvokeClient jika tersedia
	if remote:IsA("RemoteFunction") then
		local ok, hf = pcall(function() return hookfunction end)
		if ok and type(hf) == "function" and remote.InvokeClient then
			local old
			local setOK, err = pcall(function()
				old = hf(remote.InvokeClient, function(self, plr, ...)
					if CurrentRemote == self then
						local msg = "[InvokeClient]\n"..formatArgs({...}).."\n-----------------------"
						addBlock(msg)
						table.insert(Logs, msg)
					end
					return old(self, plr, ...)
				end)
			end)
			if setOK and old then
				HookRevert = function()
					-- coba kembalikan hook (tidak selalu diperlukan, tapi jaga-jaga)
					pcall(function()
						hf(remote.InvokeClient, old)
					end)
				end
			else
				addBlock("[Info] Executor tidak mendukung hook RemoteFunction (aman, lanjut untuk RemoteEvent).", Color3.fromRGB(200,200,255))
			end
		else
			addBlock("[Info] hookfunction tidak tersedia di executor (RemoteFunction tidak bisa disniff).", Color3.fromRGB(200,200,255))
		end
	end
end

-- tombol toolbar
BackBtn.MouseButton1Click:Connect(function()
	SwitchTab("Rescan")
	disconnectSniffer()
	CurrentRemote = nil
end)

CopyBtn.MouseButton1Click:Connect(function()
	if setclipboard and #Logs > 0 then
		setclipboard(table.concat(Logs, "\n"))
	end
end)

ClearBtn.MouseButton1Click:Connect(function()
	table.clear(Logs)
	DataLog:ClearAllChildren()
end)

-- Refresh list remotes
local function RefreshRemotes()
	RemoteList:ClearAllChildren()

	for _,v in ipairs(RS:GetDescendants()) do
		if v:IsA("RemoteEvent") or v:IsA("RemoteFunction") then
			if Search.Text == "" or v.Name:lower():find(Search.Text:lower()) then
				local Btn = Instance.new("TextButton")
				Btn.Size = UDim2.new(1,-10,0,25)
				Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
				Btn.TextColor3 = Color3.new(1,1,1)
				Btn.TextXAlignment = Enum.TextXAlignment.Left
				Btn.Font = Enum.Font.Gotham
				Btn.TextSize = 12
				Btn.Text = v:GetFullName()
				Btn.Parent = RemoteList

				Btn.MouseButton1Click:Connect(function()
					ShowRemote(v)
					SwitchTab("Data")
				end)
			end
		end
	end
end

Search:GetPropertyChangedSignal("Text"):Connect(RefreshRemotes)
RefreshRemotes()
