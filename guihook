--// Hook Explorer Decoder Final
-- GUI dengan auto log remote + decode args

local HttpService = game:GetService("HttpService")
local RS = game:GetService("ReplicatedStorage")

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "HookExplorerDecoder"

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 500, 0, 300)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -100, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Hook Explorer - Decoder"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.SourceSansBold
Title.Parent = MainFrame

local Close = Instance.new("TextButton")
Close.Size = UDim2.new(0, 30, 0, 30)
Close.Position = UDim2.new(1, -30, 0, 0)
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
Close.Parent = MainFrame

local Minimize = Instance.new("TextButton")
Minimize.Size = UDim2.new(0, 30, 0, 30)
Minimize.Position = UDim2.new(1, -60, 0, 0)
Minimize.Text = "-"
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
Minimize.Parent = MainFrame

local LogBox = Instance.new("TextBox")
LogBox.Size = UDim2.new(1, -10, 1, -70)
LogBox.Position = UDim2.new(0, 5, 0, 35)
LogBox.MultiLine = true
LogBox.TextWrapped = false
LogBox.ClearTextOnFocus = false
LogBox.TextEditable = false
LogBox.TextXAlignment = Enum.TextXAlignment.Left
LogBox.TextYAlignment = Enum.TextYAlignment.Top
LogBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
LogBox.TextColor3 = Color3.fromRGB(0, 255, 0)
LogBox.TextSize = 14
LogBox.Font = Enum.Font.Code
LogBox.Text = "[Hook Explorer Ready]\n"
LogBox.Parent = MainFrame

local ButtonFrame = Instance.new("Frame")
ButtonFrame.Size = UDim2.new(1, 0, 0, 30)
ButtonFrame.Position = UDim2.new(0, 0, 1, -30)
ButtonFrame.BackgroundTransparency = 1
ButtonFrame.Parent = MainFrame

local ClearBtn = Instance.new("TextButton")
ClearBtn.Size = UDim2.new(0, 100, 1, 0)
ClearBtn.Position = UDim2.new(0, 5, 0, 0)
ClearBtn.Text = "Clear"
ClearBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ClearBtn.Parent = ButtonFrame

local CopyBtn = Instance.new("TextButton")
CopyBtn.Size = UDim2.new(0, 100, 1, 0)
CopyBtn.Position = UDim2.new(0, 110, 0, 0)
CopyBtn.Text = "Copy All"
CopyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CopyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
CopyBtn.Parent = ButtonFrame

local RescanBtn = Instance.new("TextButton")
RescanBtn.Size = UDim2.new(0, 100, 1, 0)
RescanBtn.Position = UDim2.new(0, 215, 0, 0)
RescanBtn.Text = "Rescan"
RescanBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
RescanBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RescanBtn.Parent = ButtonFrame

--// Log helper
local function log(msg)
    LogBox.Text = LogBox.Text .. msg .. "\n"
    LogBox.CursorPosition = #LogBox.Text + 1
end

--// GUI Logic
ClearBtn.MouseButton1Click:Connect(function()
    LogBox.Text = ""
end)

CopyBtn.MouseButton1Click:Connect(function()
    if setclipboard then
        setclipboard(LogBox.Text)
        log("[Copied to clipboard!]")
    end
end)

Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local minimized = false
Minimize.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        LogBox.Visible = false
        ButtonFrame.Visible = false
        MainFrame.Size = UDim2.new(0, 500, 0, 30)
    else
        LogBox.Visible = true
        ButtonFrame.Visible = true
        MainFrame.Size = UDim2.new(0, 500, 0, 300)
    end
end)

--// Decoder
local function safeDecode(arg)
    local success, result = pcall(function()
        if typeof(arg) == "table" then
            return HttpService:JSONEncode(arg)
        elseif typeof(arg) == "Instance" then
            return arg:GetFullName()
        else
            return tostring(arg)
        end
    end)
    if success then
        return result
    else
        return "[Unserializable]"
    end
end

local hooked = {}

local function hookRemotes()
    for _, obj in ipairs(RS:GetDescendants()) do
        if obj:IsA("RemoteEvent") and not hooked[obj] then
            hooked[obj] = true
            obj.OnClientEvent:Connect(function(...)
                local args = {...}
                local decoded = {}
                for i,v in ipairs(args) do
                    decoded[i] = safeDecode(v)
                end
                log("[RemoteEvent] " .. obj:GetFullName() .. "\nData: " .. table.concat(decoded,", "))
                log("--------------------------------------")
            end)
        elseif obj:IsA("RemoteFunction") and not hooked[obj] then
            hooked[obj] = true
            obj.OnClientInvoke = function(...)
                local args = {...}
                local decoded = {}
                for i,v in ipairs(args) do
                    decoded[i] = safeDecode(v)
                end
                log("[RemoteFunction] " .. obj:GetFullName() .. "\nData: " .. table.concat(decoded,", "))
                log("--------------------------------------")
            end
        end
    end
end

-- initial hook
hookRemotes()
log("[Scanner] Initial remotes hooked.")

-- rescan button
RescanBtn.MouseButton1Click:Connect(function()
    hookRemotes()
    log("[Scanner] Rescan complete.")
end)
