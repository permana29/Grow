-- Remote Explorer Final Build
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- UI
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "RemoteExplorer"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0.6,0,0.6,0)
Frame.Position = UDim2.new(0.2,0,0.2,0)
Frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
Frame.BorderSizePixel = 0

local Title = Instance.new("TextLabel", Frame)
Title.Text = "Remote Explorer"
Title.Size = UDim2.new(1,0,0,30)
Title.BackgroundColor3 = Color3.fromRGB(45,45,45)
Title.TextColor3 = Color3.fromRGB(255,255,255)

local Back = Instance.new("TextButton", Frame)
Back.Text = "< Back"
Back.Size = UDim2.new(0,80,0,30)
Back.Position = UDim2.new(0,5,0,35)
Back.BackgroundColor3 = Color3.fromRGB(50,50,50)
Back.TextColor3 = Color3.fromRGB(255,255,255)

local Copy = Instance.new("TextButton", Frame)
Copy.Text = "Copy"
Copy.Size = UDim2.new(0,80,0,30)
Copy.Position = UDim2.new(0,95,0,35)
Copy.BackgroundColor3 = Color3.fromRGB(50,50,50)
Copy.TextColor3 = Color3.fromRGB(255,255,255)

local Clear = Instance.new("TextButton", Frame)
Clear.Text = "Clear"
Clear.Size = UDim2.new(0,80,0,30)
Clear.Position = UDim2.new(0,185,0,35)
Clear.BackgroundColor3 = Color3.fromRGB(80,40,40)
Clear.TextColor3 = Color3.fromRGB(255,255,255)

local Scroll = Instance.new("ScrollingFrame", Frame)
Scroll.Size = UDim2.new(1,-10,1,-75)
Scroll.Position = UDim2.new(0,5,0,70)
Scroll.BackgroundColor3 = Color3.fromRGB(20,20,20)
Scroll.BorderSizePixel = 0
Scroll.ScrollBarThickness = 6
Scroll.CanvasSize = UDim2.new(0,0,0,0)

local Content = Instance.new("TextLabel", Scroll)
Content.Size = UDim2.new(1,-10,0,20)
Content.BackgroundTransparency = 1
Content.TextColor3 = Color3.fromRGB(255,255,150)
Content.TextXAlignment = Enum.TextXAlignment.Left
Content.TextYAlignment = Enum.TextYAlignment.Top
Content.TextWrapped = true
Content.Text = ""
Content.Font = Enum.Font.Code
Content.TextSize = 16

-- Data
local scanned = {}
local logs = {}
local selectedRemote = nil

-- Scan semua Remote
local function scanRemotes()
    scanned = {}
    for _,v in ipairs(game:GetDescendants()) do
        if v:IsA("RemoteEvent") or v:IsA("RemoteFunction") then
            table.insert(scanned, v)
        end
    end
end

-- Show detail + log
local function showRemote(remote)
    selectedRemote = remote
    local path = remote:GetFullName()
    local info = "Name: "..remote.Name..
    "\nClass: "..remote.ClassName..
    "\nPath: "..path.."\n\nProperties:\n"..
    " Archivable: "..tostring(remote.Archivable)..
    "\n Name: "..remote.Name..
    "\n ClassName: "..remote.ClassName..
    "\n Parent: "..(remote.Parent and remote.Parent.Name or "nil")..
    "\n------------------"

    -- log panggilan
    if logs[remote] and #logs[remote] > 0 then
        info = info.."\nLog Calls:\n"
        for i,log in ipairs(logs[remote]) do
            info = info.."["..i.."] "..log.."\n"
        end
    else
        info = info.."\nLog Calls:\n(Data tidak terbaca)"
    end

    Content.Text = info
    Content.Size = UDim2.new(1,-10,0, Content.TextBounds.Y + 20)
    Scroll.CanvasSize = UDim2.new(0,0,0,Content.TextBounds.Y + 20)
end

-- Hooks
local mt = getrawmetatable(game)
setreadonly(mt,false)
local oldNamecall = mt.__namecall

mt.__namecall = newcclosure(function(self,...)
    local args = {...}
    local method = getnamecallmethod()

    if self:IsA("RemoteEvent") and method == "FireServer" then
        local data
        pcall(function() data = HttpService:JSONEncode(args) end)
        data = data or "Data tidak terbaca"
        logs[self] = logs[self] or {}
        table.insert(logs[self], "FireServer -> "..data)
        if self == selectedRemote then showRemote(self) end
    elseif self:IsA("RemoteFunction") and method == "InvokeServer" then
        local data
        pcall(function() data = HttpService:JSONEncode(args) end)
        data = data or "Data tidak terbaca"
        logs[self] = logs[self] or {}
        table.insert(logs[self], "InvokeServer -> "..data)
        if self == selectedRemote then showRemote(self) end
    end
    return oldNamecall(self,...)
end)

-- Tombol
Back.MouseButton1Click:Connect(function()
    Content.Text = ""
    selectedRemote = nil
    scanRemotes()
    local list = ""
    for i,v in ipairs(scanned) do
        list = list..i..". "..v.Name.." ("..v.ClassName..")\n"
    end
    Content.Text = list
    Content.Size = UDim2.new(1,-10,0, Content.TextBounds.Y + 20)
    Scroll.CanvasSize = UDim2.new(0,0,0,Content.TextBounds.Y + 20)
end)

Copy.MouseButton1Click:Connect(function()
    if Content.Text ~= "" then
        if setclipboard then
            setclipboard(Content.Text)
        end
    end
end)

Clear.MouseButton1Click:Connect(function()
    logs = {}
    if selectedRemote then showRemote(selectedRemote) end
end)

-- Initial
scanRemotes()
local list = ""
for i,v in ipairs(scanned) do
    list = list..i..". "..v.Name.." ("..v.ClassName..")\n"
end
Content.Text = list
Content.Size = UDim2.new(1,-10,0, Content.TextBounds.Y + 20)
Scroll.CanvasSize = UDim2.new(0,0,0,Content.TextBounds.Y + 20)
